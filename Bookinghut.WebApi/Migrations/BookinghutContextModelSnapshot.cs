// <auto-generated />
using System;
using Bookinghut.WebApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookinghut.WebApi.Migrations
{
    [DbContext(typeof(BookinghutContext))]
    partial class BookinghutContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bookinghut.WebApi.Database.CurrentEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventID")
                        .IsUnique();

                    b.ToTable("CurrentEvent");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.EventCustomer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<int?>("EventsID")
                        .HasColumnType("int");

                    b.Property<float>("TotalCost")
                        .HasColumnType("real");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventsID");

                    b.HasIndex("UsersID");

                    b.ToTable("EventCustomer");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.EventOrganizer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<int?>("EventsID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EventsID");

                    b.HasIndex("UsersID");

                    b.ToTable("EventOrganizer");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.Events", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurentEventID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTickets")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("Timing")
                        .HasColumnType("datetime2");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VenueID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.Venue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.CurrentEvent", b =>
                {
                    b.HasOne("Bookinghut.WebApi.Database.Events", "Events")
                        .WithOne("CurrentEvent")
                        .HasForeignKey("Bookinghut.WebApi.Database.CurrentEvent", "EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Events");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.EventCustomer", b =>
                {
                    b.HasOne("Bookinghut.WebApi.Database.Events", "Events")
                        .WithMany()
                        .HasForeignKey("EventsID");

                    b.HasOne("Bookinghut.WebApi.Database.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID");

                    b.Navigation("Events");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.EventOrganizer", b =>
                {
                    b.HasOne("Bookinghut.WebApi.Database.Events", "Events")
                        .WithMany()
                        .HasForeignKey("EventsID");

                    b.HasOne("Bookinghut.WebApi.Database.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID");

                    b.Navigation("Events");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.Events", b =>
                {
                    b.HasOne("Bookinghut.WebApi.Database.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Bookinghut.WebApi.Database.Events", b =>
                {
                    b.Navigation("CurrentEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
